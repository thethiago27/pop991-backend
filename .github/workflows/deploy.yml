name: Update Function Code

on:
  push:
    branches:
      - master

jobs:
  get-filenames:
    runs-on: ubuntu-latest
    outputs:
      lambdaArray: ${{ steps.lambda_functions.outputs.lambdas }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get functions filenames
        id: lambda_functions
        run: |
          directories=$(tree lambda_functions -d -L 1 -J | jq -j -c '.[0].contents | map(.name)')
          echo ::set-output name=lambdas::${directories}

  cache-lambdas-functions:
    needs: get-filenames
    strategy:
      matrix:
        lambda: ${{ fromJson(needs.get-filenames.outputs.lambdaArray) }}
    runs-on: ubuntu-latest
    steps:
      - name: Create SHA256 hash
        id: hash
        run: |
          cd lambda_functions/${{matrix.lambda}}
          echo "::set-output name=hash::$(echo ${{ hashFiles('**/*.py') }} | sha256sum | awk '{print $1}')"
      - name: Cache Lambda functions
        uses: actions/cache@v3
        env:
          cache-name: cache-lambdas-functions-hash-${{ matrix.lambda }}
        with:
          path: lambda_functions/${{matrix.lambda}}
          key: ${{ runner.os }}-lambda-${{matrix.lambda}}-${{ steps.hash.outputs.hash }}
          restore-keys: ${{ runner.os }}-lambda-${{matrix.lambda}}-

  update-code:
    needs: [get-filenames, cache-lambdas-functions]
    strategy:
      matrix:
        lambda: ${{ fromJson(needs.get-filenames.outputs.lambdaArray) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - if: ${{ needs.cache-lambdas-functions.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          cd lambda_functions/${{matrix.lambda}}
          pip install -r requirements.txt -t .


