name: Update Function Code

on:
  push:
    branches:
      - master

jobs:
  get-filenames:
    runs-on: ubuntu-latest
    outputs:
      lambdaArray: ${{ steps.lambda_functions.outputs.lambdas }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get functions filenames
        id: lambda_functions
        run: |
          directories=$(tree lambda_functions -d -L 1 -J | jq -j -c '.[0].contents | map(.name)')
          echo ::set-output name=lambdas::${directories}

  cache-lambdas-functions:
    needs: get-filenames
    runs-on: ubuntu-latest
    steps:
      - name: Create SHA256 hash
        id: hash
        run: echo "::set-output name=hash::$(echo ${{ hashFiles('**/*.py') }} | sha256sum | awk '{print $1}')"
      - name: Cache Lambda functions
        uses: actions/cache@v3
        with:
          path: lambda_functions
          key: ${{ runner.os }}-lambda-functions-${{ steps.hash.outputs.hash }}
          restore-keys: ${{ runner.os }}-lambda-functions-

  update-code:
    needs: get-filenames
    strategy:
      matrix:
        lambda: ${{ fromJson(needs.get-filenames.outputs.lambdaArray) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Zip And Install Lambda functions
        run: |
          cd lambda_functions/${{matrix.lambda}}
          pip install -r requirements.txt -t .
          zip -r ${{matrix.lambda}}.zip .

      - name: Create New SHA256 hash
        id: new_hash
        run: echo "::set-output name=hash::$(echo ${{ hashFiles('**/*.py') }} | sha256sum | awk '{print $1}')"

      - name: Compare Hashes and Deploy if Different
        run: |
          if [ "${{ steps.hash.outputs.hash }}" != "${{ steps.new_hash.outputs.hash }}" ]; then
            aws lambda update-function-code --function-name=${{matrix.lambda}} --zip-file=fileb://lambda_functions/${{matrix.lambda}}/${{matrix.lambda}}.zip
          else
            echo "No changes in code. Skipping deployment."
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
